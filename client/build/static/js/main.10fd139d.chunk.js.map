{"version":3,"sources":["context/auth/authContext.js","context/contact/contactContext.js","components/Navbar.jsx","components/contact/ContactItem.jsx","components/contact/Contacts.jsx","components/contact/ContactForm.jsx","context/contact/ContactFilter.js","views/Home.jsx","views/About.jsx","context/contact/contactReducer.js","context/types.js","context/contact/ContactState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","components/auth/Register.jsx","components/auth/Login.jsx","components/Alerts.jsx","App.js","index.js"],"names":["authContext","createContext","ContactContext","Navbar","title","icon","useContext","AuthContext","contactContext","isAuthenticated","user","logOut","clearContacts","AuthLink","name","href","onClick","className","GuestLink","to","defaultProps","ContactItem","contact","email","phone","type","_id","deleteContact","setCurrent","style","float","charAt","toUpperCase","slice","Contacts","contacts","filtered","getContact","loading","useEffect","length","CircularProgress","TransitionGroup","map","CSSTransition","key","timeout","classNames","ContactForm","useState","setContact","addContact","current","clearCurrent","updateContact","onChange","e","target","value","onSubmit","preventDefault","placeholder","checked","ContactFilter","contextContact","text","useRef","filterContact","clearFilter","ref","Home","props","loadUser","history","push","About","state","action","payload","filter","error","regex","RegExp","match","config","headers","ContactState","useReducer","contactReducer","dispatch","a","axios","get","res","data","response","msg","post","id","delete","put","Provider","children","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","authReducer","register","formData","logIn","clearErrors","alertContext","require","alert","AlertState","alertReducer","alerts","setAlert","uuid","setTimeout","Register","AlertContext","password","password2","setUser","htmlFor","required","minLength","Login","Alerts","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10fd139d.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { createContext } from \"react\";\n\nconst ContactContext = createContext();\n\nexport default ContactContext;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthContext from \"../context/auth/authContext\";\nimport ContactContext from \"../context/contact/contactContext\";\nimport { useContext } from \"react\";\n\nconst Navbar = ({ title, icon }) => {\n   const authContext = useContext(AuthContext);\n   const contactContext = useContext(ContactContext);\n\n   const { isAuthenticated, user, logOut } = authContext;\n   const { clearContacts } = contactContext;\n\n   const AuthLink = () => {\n      return (\n         <Fragment>\n            <li>Hello, {user && user.name}</li>\n            <li>\n               <a href=\"#!\" onClick={logOut}>\n                  <i className=\"fas fa-sign-out-alt\"></i>\n                  <span className=\"hide-sm\" onClick={clearContacts}>\n                     Logout\n                  </span>\n               </a>\n            </li>\n         </Fragment>\n      );\n   };\n\n   const GuestLink = () => {\n      return (\n         <Fragment>\n            <li>\n               <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n               <Link to=\"/login\">Login</Link>\n            </li>\n         </Fragment>\n      );\n   };\n   return (\n      <div className=\"navbar bg-primary\">\n         <h1>\n            <i className={icon} />\n            &ensp;{title}\n         </h1>\n         <ul>{isAuthenticated ? <AuthLink /> : <GuestLink />}</ul>\n      </div>\n   );\n};\n\nNavbar.propTypes = {\n   title: PropTypes.string.isRequired,\n   icon: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n   title: \"Contact Keeper\",\n   icon: \"fas fa-id-card-alt\",\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport { useContext } from \"react\";\n\nconst ContactItem = ({ contact }) => {\n   const { name, email, phone, type, _id } = contact;\n   const contactContext = useContext(ContactContext);\n   const { deleteContact, setCurrent } = contactContext;\n\n   return (\n      <div className=\"card bg-light\">\n         <h3 className=\"text-primary text-left\">\n            {name}{\" \"}\n            <span\n               style={{ float: \"right\" }}\n               className={\n                  \"badge \" +\n                  (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\n               }\n            >\n               {type.charAt(0).toUpperCase() + type.slice(1)}\n            </span>\n         </h3>\n         <ul className=\"list\">\n            {email && (\n               <li>\n                  <i className=\"fas fa-envelope-open\" /> {email}\n               </li>\n            )}\n            {phone && (\n               <li>\n                  <i className=\"fas fa-phone\" /> {phone}\n               </li>\n            )}\n         </ul>\n         <p>\n            <button\n               className=\"btn btn-dark btn-sm\"\n               onClick={() => setCurrent(contact)}\n            >\n               Edit\n            </button>\n            <button\n               className=\"btn btn-danger btn-sm\"\n               onClick={() => deleteContact(_id)}\n            >\n               Delete\n            </button>\n         </p>\n      </div>\n   );\n};\n\nContactItem.propTypes = {\n   contact: PropTypes.object.isRequired,\n};\nexport default ContactItem;\n","import React, { Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport ContactItem from \"./ContactItem\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst Contacts = () => {\n   const contactContext = useContext(ContactContext);\n\n   const { contacts, filtered, getContact, loading } = contactContext;\n\n   useEffect(() => {\n      getContact();\n   }, []);\n\n   if (contacts !== null && contacts.length === 0 && !loading) {\n      return <h4>Please Add a Contact</h4>;\n   }\n   return (\n      <Fragment>\n         {contacts !== null && !loading ? (\n            <TransitionGroup>\n               {filtered !== null\n                  ? filtered.map((contact) => (\n                       <CSSTransition\n                          key={contact._id}\n                          timeout={500}\n                          classNames=\"item\"\n                       >\n                          <ContactItem contact={contact} key={contact._id} />\n                       </CSSTransition>\n                    ))\n                  : contacts.map((contact) => (\n                       <CSSTransition\n                          key={contact._id}\n                          timeout={500}\n                          classNames=\"item\"\n                       >\n                          <ContactItem contact={contact} key={contact._id} />\n                       </CSSTransition>\n                    ))}\n            </TransitionGroup>\n         ) : (\n            <CircularProgress />\n         )}\n      </Fragment>\n   );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n   const contactContext = useContext(ContactContext);\n\n   const [contact, setContact] = useState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\",\n   });\n   const {\n      addContact,\n      current,\n      clearCurrent,\n      updateContact,\n      getContact,\n   } = contactContext;\n\n   useEffect(() => {\n      if (current !== null) {\n         setContact(current);\n      } else {\n         setContact({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            type: \"personal\",\n         });\n      }\n   }, [current, contactContext]);\n\n   const { name, email, phone, type } = contact;\n\n   const onChange = (e) =>\n      setContact({ ...contact, [e.target.name]: e.target.value });\n\n   const onSubmit = (e) => {\n      e.preventDefault();\n      if (current !== null) {\n         updateContact(contact);\n         clearCurrent();\n      } else {\n         addContact(contact);\n      }\n   };\n   return (\n      <form onSubmit={onSubmit}>\n         <h2 className=\"text-primary\">\n            {current ? \"Update Contact\" : \"Add Contact\"}\n         </h2>\n         <input\n            type=\"text\"\n            placeholder=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={onChange}\n         />\n         <input\n            type=\"text\"\n            placeholder=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n         />\n         <input\n            type=\"text\"\n            placeholder=\"phone\"\n            name=\"phone\"\n            value={phone}\n            onChange={onChange}\n         />\n         <h5>Contact Type</h5>\n         <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"personal\"\n            checked={type === \"personal\"}\n            onChange={onChange}\n         />{\" \"}\n         Personal\n         <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"professional\"\n            checked={type === \"professional\"}\n            onChange={onChange}\n         />{\" \"}\n         Professional\n         {current ? (\n            <div>\n               <button\n                  className=\"btn btn-block btn-light\"\n                  onClick={clearCurrent}\n               >\n                  Clear\n               </button>\n            </div>\n         ) : (\n            \"\"\n         )}\n         <div>\n            <input\n               type=\"submit\"\n               value={current ? \"Update Contact\" : \"Add Contact\"}\n               className=\"btn btn-primary btn-block\"\n            />\n         </div>\n      </form>\n   );\n};\n\nexport default ContactForm;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactFilter = () => {\n   const contextContact = useContext(ContactContext);\n   const text = useRef(\"\");\n   const { filterContact, clearFilter, filtered } = contextContact;\n\n   useEffect(() => {\n      if (filtered === null) {\n         text.current.value = \"\";\n      }\n   });\n   const onChange = (e) => {\n      if (text.current.value != \"\") {\n         filterContact(e.target.value);\n      } else {\n         clearFilter();\n      }\n   };\n\n   return (\n      <form>\n         <input\n            ref={text}\n            type=\"text\"\n            placeholder=\"Filter Contacts...\"\n            onChange={onChange}\n         />\n      </form>\n   );\n};\n\nexport default ContactFilter;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contacts from \"../components/contact/Contacts\";\nimport ContactForm from \"../components/contact/ContactForm\";\nimport ContactFilter from \"../context/contact/ContactFilter\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/auth/authContext\";\n\nconst Home = (props) => {\n   const authContext = useContext(AuthContext);\n\n   const { isAuthenticated } = authContext;\n\n   useEffect(() => {\n      authContext.loadUser();\n   }, []);\n\n   useEffect(() => {\n      if (!isAuthenticated) {\n         props.history.push(\"/login\");\n      }\n   }, [props.history, isAuthenticated]);\n\n   return (\n      <div className=\"grid-2\">\n         <div>\n            <ContactForm />\n         </div>\n         <div>\n            <ContactFilter />\n            <Contacts />\n         </div>\n      </div>\n   );\n};\n\nHome.propTypes = {};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst About = (props) => {\n   return (\n      <div>\n         <h1>About this App</h1>\n         <p className=\"my-1\">This is a full stack React app for Contact Keeper</p>\n         <p className=\"bg-dark p\">\n            <strong>Version : </strong>1.0.0\n         </p>\n      </div>\n   );\n};\n\nAbout.propTypes = {};\n\nexport default About;\n","import {\n   GET_CONTACTS,\n   ADD_CONTACT,\n   CLEAR_CONTACTS,\n   CLEAR_CURRNET,\n   CLEAR_FILTER,\n   CONTACT_ERROR,\n   DELETE_CONTACT,\n   FILTER_CONTACTS,\n   SET_CURRENT,\n   UPDATE_CONTACT,\n} from \"../types\";\n\nexport default (state, action) => {\n   switch (action.type) {\n      case GET_CONTACTS:\n         return {\n            ...state,\n            contacts: action.payload,\n            loading: false,\n         };\n      case ADD_CONTACT:\n         return {\n            ...state,\n            contacts: [...state.contacts, action.payload],\n            loading: false,\n         };\n      case UPDATE_CONTACT:\n         return {\n            ...state,\n            contacts: state.contacts.map((contact) =>\n               contact._id === action.payload._id ? action.payload : contact\n            ),\n            loading: false,\n         };\n      case DELETE_CONTACT:\n         return {\n            ...state,\n            contacts: state.contacts.filter(\n               (contact) => contact._id !== action.payload\n            ),\n            loading: false,\n         };\n      case CLEAR_CONTACTS:\n         return {\n            contacts: null,\n            current: null,\n            filtered: null,\n            error: null,\n         };\n      case SET_CURRENT:\n         return {\n            ...state,\n            current: action.payload,\n         };\n      case CLEAR_CURRNET:\n         return {\n            ...state,\n            current: null,\n         };\n      case FILTER_CONTACTS:\n         return {\n            ...state,\n            filtered: state.contacts.filter((contact) => {\n               const regex = new RegExp(`${action.payload}`, \"gi\");\n               return contact.name.match(regex) || contact.email.match(regex);\n            }),\n         };\n      case CLEAR_FILTER:\n         return {\n            ...state,\n            filtered: null,\n         };\n\n      case CONTACT_ERROR:\n         return {\n            ...state,\n            error: action.payload,\n         };\n      default:\n         return state;\n   }\n};\n","export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRNET = \"CLEAR_CURRNET\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\nexport const FILTER_CONTACTS = \"FILTER_CONTACTS\";\nexport const GET_CONTACTS = \"GET_CONTACTS\";\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\n\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\nexport const CONTACT_ERROR = \"CONTACT_ERROR\";\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\n\nimport {\n   GET_CONTACTS,\n   CLEAR_CONTACTS,\n   ADD_CONTACT,\n   CLEAR_CURRNET,\n   CLEAR_FILTER,\n   DELETE_CONTACT,\n   FILTER_CONTACTS,\n   REMOVE_ALERT,\n   SET_ALERT,\n   SET_CURRENT,\n   UPDATE_CONTACT,\n   CONTACT_ERROR,\n} from \"../types\";\n\nconst config = {\n   headers: {\n      \"Content-Type\": \"application/json\",\n   },\n};\n\nconst ContactState = (props) => {\n   const initialState = {\n      contacts: null,\n      current: null,\n      filtered: null,\n      error: null,\n   };\n\n   const [state, dispatch] = useReducer(contactReducer, initialState);\n\n   // Get Contacts\n   const getContact = async () => {\n      try {\n         const res = await axios.get(\"api/contact\");\n\n         dispatch({\n            type: GET_CONTACTS,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: CONTACT_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n   // Add Contact\n   const addContact = async (contact) => {\n      try {\n         const res = await axios.post(\"api/contact\", contact, config);\n\n         dispatch({\n            type: ADD_CONTACT,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: CONTACT_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n   // Delete Contact\n   const deleteContact = async (id) => {\n      try {\n         await axios.delete(`api/contact/${id}`);\n\n         dispatch({ type: DELETE_CONTACT, payload: id });\n      } catch (err) {\n         dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n      }\n   };\n\n   // Clear Contact\n   const clearContacts = () => {\n      dispatch({\n         type: CLEAR_CONTACTS,\n      });\n   };\n\n   // Set Current Contact\n   const setCurrent = (contact) => {\n      dispatch({ type: SET_CURRENT, payload: contact });\n   };\n\n   // Clear Current Contact\n   const clearCurrent = () => {\n      dispatch({ type: CLEAR_CURRNET });\n   };\n\n   // Update Contact\n   const updateContact = async (contact) => {\n      try {\n         const res = await axios.put(\n            `api/contact/${contact._id}`,\n            contact,\n            config\n         );\n\n         dispatch({\n            type: UPDATE_CONTACT,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: CONTACT_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n   // Filter Contacts\n   const filterContact = (text) => {\n      dispatch({ type: FILTER_CONTACTS, payload: text });\n   };\n\n   // Clear Filter\n   const clearFilter = () => {\n      dispatch({ type: CLEAR_FILTER });\n   };\n\n   return (\n      <ContactContext.Provider\n         value={{\n            contacts: state.contacts,\n            current: state.current,\n            filtered: state.filtered,\n            error: state.error,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            filterContact,\n            clearFilter,\n            getContact,\n            clearContacts,\n         }}\n      >\n         {props.children}\n      </ContactContext.Provider>\n   );\n};\n\nexport default ContactState;\n","import {\n   REGISTER_SUCCESS,\n   REGISTER_FAIL,\n   USER_LOADED,\n   AUTH_ERROR,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOGOUT,\n} from \"../types\";\n\nexport default (state, action) => {\n   switch (action.type) {\n      case USER_LOADED:\n         return {\n            ...state,\n            isAuthenticated: true,\n            loading: false,\n            user: action.payload,\n         };\n      case REGISTER_SUCCESS:\n      case LOGIN_SUCCESS:\n         localStorage.setItem(\"token\", action.payload.token);\n         return {\n            ...state,\n            ...action.payload,\n            isAuthenticated: true,\n            loading: false,\n         };\n\n      case REGISTER_FAIL:\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT:\n         localStorage.removeItem(\"token\");\n         return {\n            ...state,\n            token: null,\n            isAuthenticated: false,\n            loading: false,\n            user: null,\n            error: action.payload,\n         };\n\n      default:\n         return state;\n   }\n};\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n   if (token) {\n      axios.defaults.headers.common[\"x-auth-token\"] = token;\n   } else {\n      delete axios.defaults.headers.common[\"x-auth-token\"];\n   }\n};\n\nexport default setAuthToken;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\n\nimport {\n   REGISTER_SUCCESS,\n   REGISTER_FAIL,\n   USER_LOADED,\n   AUTH_ERROR,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOGOUT,\n   CLEAR_ERRORS,\n} from \"../types\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nconst config = {\n   headers: {\n      \"Content-Type\": \"application/json\",\n   },\n};\n\nconst AuthState = (props) => {\n   const initialState = {\n      token: localStorage.getItem(\"token\"),\n      isAuthenticated: null,\n      user: null,\n      loading: true,\n      error: null,\n   };\n\n   const [state, dispatch] = useReducer(authReducer, initialState);\n\n   // Load User\n   const loadUser = async () => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n      }\n      try {\n         const res = await axios.get(\"/api/auth\");\n\n         dispatch({\n            type: USER_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: AUTH_ERROR,\n            payload: err.response.data.msg,\n         });\n      }\n   };\n\n   // Register User\n   const register = async (formData) => {\n      try {\n         const res = await axios.post(\"/api/user\", formData, config);\n\n         dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data,\n         });\n         loadUser();\n      } catch (err) {\n         dispatch({\n            type: REGISTER_FAIL,\n            payload: err.response.data.msg,\n         });\n      }\n   };\n\n   // Login User\n   const logIn = async (formData) => {\n      try {\n         const res = await axios.post(\"/api/auth\", formData, config);\n\n         dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data,\n         });\n         loadUser();\n      } catch (err) {\n         dispatch({\n            type: LOGIN_FAIL,\n            payload: err.response.data.msg,\n         });\n      }\n   };\n\n   // Logout\n   const logOut = () => {\n      dispatch({\n         type: LOGOUT,\n      });\n   };\n\n   // Clear Errors\n   const clearErrors = () => {\n      return {\n         ...state,\n         error: null,\n      };\n   };\n   return (\n      <AuthContext.Provider\n         value={{\n            token: state.token,\n            isAuthenticated: state.isAuthenticated,\n            user: state.user,\n            loading: state.loading,\n            error: state.error,\n            register,\n            loadUser,\n            logIn,\n            logOut,\n            clearErrors,\n         }}\n      >\n         {props.children}\n      </AuthContext.Provider>\n   );\n};\n\nexport default AuthState;\n","const { createContext } = require(\"react\");\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n   switch (action.type) {\n      case SET_ALERT:\n         return [...state, action.payload];\n      case REMOVE_ALERT:\n         return state.filter((alert) => alert.id !== action.payload);\n      default:\n         return state;\n   }\n};\n","import React, { useReducer } from \"react\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { v4 as uuid } from \"uuid\";\nimport { REMOVE_ALERT, SET_ALERT } from \"../types\";\n\nconst AlertState = (props) => {\n   const initialState = [];\n   const [state, dispatch] = useReducer(alertReducer, initialState);\n\n   // Set Alert\n   const setAlert = (msg, type, timeout = 5000) => {\n      const id = uuid();\n      dispatch({\n         type: SET_ALERT,\n         payload: { msg, type, id },\n      });\n\n      setTimeout(\n         () =>\n            dispatch({\n               type: REMOVE_ALERT,\n               payload: id,\n            }),\n         timeout\n      );\n   };\n\n   return (\n      <AlertContext.Provider\n         value={{\n            alerts: state,\n            setAlert,\n         }}\n      >\n         {props.children}\n      </AlertContext.Provider>\n   );\n};\n\nexport default AlertState;\n","import React, { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst Register = (props) => {\n   const alertContext = useContext(AlertContext);\n   const authContext = useContext(AuthContext);\n\n   const { setAlert } = alertContext;\n\n   const { register, error, clearErrors, isAuthenticated } = authContext;\n\n   const [user, setUser] = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n   });\n\n   const { name, email, password, password2 } = user;\n\n   const onChange = (e) => {\n      setUser({\n         ...user,\n         [e.target.name]: e.target.value,\n      });\n   };\n\n   useEffect(() => {\n      if (isAuthenticated) {\n         props.history.push(\"/\");\n      }\n      if (error === \"user is already exists\") {\n         setAlert(error, \"danger\");\n         clearErrors();\n      }\n   }, [error, isAuthenticated, props.history]);\n\n   const onSubmit = (e) => {\n      e.preventDefault();\n      if (name === \"\" || email === \"\" || password === \"\") {\n         setAlert(\"Please enter all fields\", \"danger\");\n      } else if (password !== password2) {\n         setAlert(\"Password does not matched\", \"danger\");\n      } else {\n         register({\n            name,\n            email,\n            password,\n         });\n      }\n   };\n\n   return (\n      <div className=\"form-container\">\n         <h1>\n            Account <span className=\"text-primary\">Register</span>\n         </h1>\n         <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Name</label>\n               <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChange}\n                  required\n               />\n            </div>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Email Address</label>\n               <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                  required\n               />\n            </div>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Password</label>\n               <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                  required\n                  minLength=\"6\"\n               />\n            </div>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Confirm Password</label>\n               <input\n                  type=\"password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={onChange}\n                  required\n                  minLength=\"6\"\n               />\n            </div>\n            <input\n               type=\"submit\"\n               value=\"Register\"\n               className=\"btn btn-primary btn-block\"\n               onClick={onSubmit}\n            />\n         </form>\n      </div>\n   );\n};\n\nexport default Register;\n","import React, { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\n\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst Login = (props) => {\n   const alertContext = useContext(AlertContext);\n   const authContext = useContext(AuthContext);\n\n   const { setAlert } = alertContext;\n   const { logIn, error, clearErrors, isAuthenticated } = authContext;\n\n   useEffect(() => {\n      if (isAuthenticated) {\n         props.history.push(\"/\");\n      }\n      if (error) {\n         setAlert(error, \"danger\");\n         clearErrors();\n      }\n   }, [props.history, isAuthenticated, error]);\n\n   const [user, setUser] = useState({\n      email: \"\",\n      password: \"\",\n   });\n\n   const { email, password } = user;\n\n   const onChange = (e) => {\n      setUser({\n         ...user,\n         [e.target.name]: e.target.value,\n      });\n   };\n   const onSubmit = (e) => {\n      e.preventDefault();\n      if (email === \"\" || password === \"\") {\n         setAlert(\"Please insert email and password\", \"danger\");\n      } else {\n         logIn({\n            email,\n            password,\n         });\n      }\n   };\n\n   return (\n      <div className=\"form-container\">\n         <h1>\n            Contact Keeper <span className=\"text-primary\">Login</span>\n         </h1>\n         <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Email Address</label>\n               <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                  required\n               />\n            </div>\n            <div className=\"form-group\">\n               <label htmlFor=\"name\">Password</label>\n               <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                  required\n               />\n            </div>\n\n            <input\n               type=\"submit\"\n               value=\"Login\"\n               className=\"btn btn-primary btn-block\"\n               onClick={onSubmit}\n            />\n         </form>\n      </div>\n   );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport AlertContext from \"../context/alert/alertContext\";\n\nconst Alerts = () => {\n   const alertContext = useContext(AlertContext);\n   return (\n      alertContext.alerts.length > 0 &&\n      alertContext.alerts.map((alert) => {\n         return (\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\n               <i className=\"fas fa-info-circle\"></i> {alert.msg}\n            </div>\n         );\n      })\n   );\n};\n\nexport default Alerts;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./views/Home\";\nimport About from \"./views/About\";\n\nimport ContactState from \"./context/contact/ContactState\";\nimport AuthState from \"./context/auth/AuthState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alerts from \"./components/Alerts\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\n\nif (localStorage.token) {\n   setAuthToken(localStorage.token);\n}\n\nfunction App() {\n   return (\n      <AuthState>\n         <ContactState>\n            <AlertState>\n               <BrowserRouter>\n                  <Navbar />\n                  <div className=\"container\">\n                     <Alerts />\n                     <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/About\" component={About} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n                     </Switch>\n                  </div>\n               </BrowserRouter>\n            </AlertState>\n         </ContactState>\n      </AuthState>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}